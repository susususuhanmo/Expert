package com.zstu.libdata.StreamSplit.test

import java.io.PrintWriter
import scala.io.Source
/**
  * Created by Administrator on 2018/3/22 0022.
  */
object Replace {
def getCh(lineStr: String) ={
  val numArray = lineStr.split(" ").map(_.trim).filter(_!="").map(str=>KeyWordMap.keyWordArray(str.toInt-1))
  numArray.reduce(_+"    "+_)
}
  def main(args: Array[String]): Unit = {
//    val str = "第1类的有:162\n第2类的有:2    3    4   12   13   14   15   16   17   18   19   23   29   30   32   33   34   36   39   40   42   43   44   48   49   50   51   54   55   56   57   58   61   62   63   64   65   66   70   76   77   78   80   81   85   86   87   91   93   94   95   96   98   99  100  101  103  105  106  111  113  114  116  117  118  120  121  122  123  124  125  126  127  128  129  133  134  136  139  142  143  144  145  146  147  150  151  153  154  155  157  158  159  160  161  181  182  183  184  185  186  187  188  189  191  192  193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208  209  210  211  212  213\n第3类的有:163\n第4类的有:27\n第5类的有:24\n第6类的有:166\n第7类的有:167\n第8类的有:168\n第9类的有:169\n第10类的有:170\n第11类的有:171\n第12类的有:172\n第13类的有:173\n第14类的有:174\n第15类的有:179\n第16类的有:176\n第17类的有:21\n第18类的有:59  60\n第19类的有:10  11  71\n第20类的有:1  75\n第21类的有:164  165  175\n第22类的有:25  26\n第23类的有:31  132\n第24类的有:69  135\n第25类的有:52  53\n第26类的有:82   83  112\n第27类的有:8  9\n第28类的有:67  68\n第29类的有:20  35\n第30类的有:37  45\n第31类的有:148  149\n第32类的有:177  178\n第33类的有:152  190\n第34类的有:72  73\n第35类的有:90  104  180\n第36类的有:140  141\n第37类的有:88  89\n第38类的有:119  156\n第39类的有:137  138\n第40类的有:130  131\n第41类的有:46  47\n第42类的有:5  115\n第43类的有:107  108\n第44类的有:22  84\n第45类的有:109  110\n第46类的有:41  92\n第47类的有:38  79\n第48类的有:28  74\n第49类的有:97  102\n第50类的有:6  7"
//    val lines = str.split("\n")
//    val splitLines = lines.map(line => (line.substring(0,line.indexOf(":")),line.substring(line.indexOf(":")+1)))
//    val reslut = splitLines.map(v => v._1+":"+getCh(v._2)).reduce(_+"\n"+_)
//    print(reslut)
//val fileName = "E:\\aaa.txt"
//    val source = Source.fromFile(fileName)
//    val lines: Iterator[String] = source.getLines
//
//var linesR = lines.filter( str => if(str=="") false else if(str.indexOf('2')==0&&str(str.length-1)==')') false else if(str.indexOf('2')==0&&str(str.length-1)=='>') false else true)
//
////    val str = "2018-03-22 0:16:21 挚友Kefka(504999235)"
////println(str.indexOf('2'))
////println(str(str.length-1))
//    var result = linesR.map(str => str.replace("[图片]","").replace("[表情]","")).filter(_ != "").filter(str => str.indexOf("@")<0 && str.indexOf("参加了投票")<0)
//  .filter(_.indexOf("[QQ红包]")<0)
//
//
//
//    val headWriter = new PrintWriter("C://Users//Administrator//Desktop//headKey.txt")
var a = "<!DOCTYPE html>\n<html>\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>关键词关系图谱示例</title>\n\t<script type=\"text/javascript\" src=\"jquery-3.2.1.min.js\"></script>\n\t<script type=\"text/javascript\" src=\"echarts.js\"></script>\n\t<script type=\"text/javascript\" src=\"dataTool.min.js\"></script>\n\t\n</head>\n<body>\n<div id=\"main\" style=\"width: 1900px; height: 100%;\">\n    \n</div>\n<script type=\"text/javascript\">\n    var files = [\"keywords-102-4-4.json\",\"keywords-103-27-31.json\",\"keywords-104-8-12.json\",\"keywords-105-20-22.json\",\"keywords-106-22-23.json\",\"keywords-107-9-9.json\",\"keywords-108-66-73.json\",\"keywords-109-12-12.json\",\"keywords-110-27-40.json\",\"keywords-111-20-24.json\",\"keywords-112-13-15.json\",\"keywords-113-8-9.json\",\"keywords-114-34-58.json\",\"keywords-115-9-11.json\",\"keywords-116-19-26.json\",\"keywords-117-19-23.json\",\"keywords-118-62-90.json\",\"keywords-119-10-16.json\",\"keywords-120-3-2.json\",\"keywords-121-11-15.json\",\"keywords-122-14-16.json\",\"keywords-123-46-65.json\",\"keywords-124-4-3.json\",\"keywords-125-8-8.json\",\"keywords-126-7-6.json\",\"keywords-127-4-4.json\",\"keywords-128-42-49.json\",\"keywords-129-6-5.json\",\"keywords-130-33-34.json\",\"keywords-131-6-5.json\",\"keywords-132-7-7.json\",\"keywords-133-34-51.json\",\"keywords-134-14-14.json\",\"keywords-135-7-8.json\",\"keywords-136-30-33.json\",\"keywords-137-2-1.json\",\"keywords-138-3-3.json\",\"keywords-139-48-83.json\",\"keywords-140-4-3.json\",\"keywords-141-4-3.json\",\"keywords-142-4-3.json\",\"keywords-143-4-3.json\",\"keywords-144-14-15.json\",\"keywords-145-17-22.json\",\"keywords-146-7-6.json\",\"keywords-147-5-5.json\",\"keywords-148-21-20.json\",\"keywords-149-8-11.json\",\"keywords-150-20-28.json\",\"keywords-151-28-30.json\",\"keywords-152-21-22.json\",\"keywords-153-11-13.json\",\"keywords-154-7-6.json\",\"keywords-155-5-5.json\",\"keywords-156-6-7.json\",\"keywords-157-15-20.json\",\"keywords-158-9-10.json\",\"keywords-159-19-19.json\",\"keywords-160-29-31.json\",\"keywords-161-11-12.json\",\"keywords-162-10-10.json\",\"keywords-163-2-1.json\",\"keywords-164-9-10.json\",\"keywords-165-2-1.json\",\"keywords-166-17-19.json\",\"keywords-167-6-6.json\",\"keywords-168-3-2.json\",\"keywords-169-3-2.json\",\"keywords-170-2-1.json\",\"keywords-171-15-25.json\",\"keywords-172-8-10.json\",\"keywords-173-22-27.json\",\"keywords-174-6-5.json\",\"keywords-175-3-2.json\",\"keywords-176-84-121.json\",\"keywords-177-8-10.json\",\"keywords-178-12-15.json\",\"keywords-179-2-1.json\",\"keywords-180-9-10.json\",\"keywords-181-7-8.json\",\"keywords-182-7-6.json\",\"keywords-183-22-26.json\",\"keywords-184-9-10.json\",\"keywords-185-11-10.json\",\"keywords-186-12-15.json\",\"keywords-187-4-5.json\",\"keywords-188-2-1.json\",\"keywords-189-5-6.json\",\"keywords-190-3-2.json\",\"keywords-191-4-3.json\",\"keywords-192-2-1.json\",\"keywords-193-14-14.json\",\"keywords-194-8-8.json\",\"keywords-195-3-2.json\",\"keywords-196-2-1.json\",\"keywords-197-25-31.json\",\"keywords-198-28-29.json\",\"keywords-199-22-23.json\",\"keywords-200-22-23.json\",\"keywords-201-9-10.json\",\"keywords-202-6-6.json\",\"keywords-203-5-5.json\",\"keywords-204-4-4.json\",\"keywords-205-4-4.json\"]\n\n    // var  html=\"<div class='fg' style='background-color:pink;color:red'>我是被动态创建的</div>\" \n    // $(\".fg\").append(html); \n    $.each(files,function(index, el) {\n        var html = \"<div id=\\\"charts_\"+ index +\"\\\" style=\\\"width:1900px; margin-left:5px; height:900px;\\\"></div>\";\n        $(\"#main\").append(html);\n        var id = \"charts_\" + index;\n        var myChart = echarts.init(document.getElementById(id));\n        myChart.showLoading();\n\n        var filename = 'http://118.31.23.47/public/jsonfile/' + el;\n\n        $.getJSON(filename, function (json) {\n        myChart.hideLoading();\n        myChart.setOption(option = {\n            title: {\n                text: el\n            },\n            animationDurationUpdate: 1500,\n            animationEasingUpdate: 'quinticInOut',\n            series : [\n                {\n                    type: 'graph',\n                    layout: 'force',\n                    force:{\n                        repulsion:150\n                    },\n                    // progressiveThreshold: 700,\n                    label: {\n                        show:true\n                    },\n                    data: json.nodes.map(function (node) {\n                        return {\n                            id: node.id,\n                            name: node.label,\n                            symbolSize: node.size,\n                            itemStyle: {\n                                normal: {\n                                    color: node.color\n                                }\n                            }\n                        };\n                    }),\n\n                    edges: json.edges.map(function (edge) {\n                        return {\n                            source: edge.sourceID,\n                            target: edge.targetID\n                        };\n                    }),\n\n                    roam: true,\n                    focusNodeAdjacency: true,\n                    lineStyle: {\n                        normal: {\n                            width: 0.5,\n                            curveness: 0.3,\n                            opacity: 0.7\n                        }\n                    }\n                }\n            ]\n        }, true);\n\n    \n    });\n\n\t\n});\n</script>\n</body>\n</html>"
println(a.replace("'","\'"))
var b = "<!DOCTYPE html>\n<html>\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>关键词关系图谱示例</title>\n\t<script type=\"text/javascript\" src=\"jquery-3.2.1.min.js\"></script>\n\t<script type=\"text/javascript\" src=\"echarts.js\"></script>\n\t<script type=\"text/javascript\" src=\"dataTool.min.js\"></script>\n\t\n</head>\n<body>\n<div id=\"main\" style=\"width: 1900px; height: 100%;\">\n    \n</div>\n<script type=\"text/javascript\">\n    var files = [\"keywords-102-4-4.json\",\"keywords-103-27-31.json\",\"keywords-104-8-12.json\",\"keywords-105-20-22.json\",\"keywords-106-22-23.json\",\"keywords-107-9-9.json\",\"keywords-108-66-73.json\",\"keywords-109-12-12.json\",\"keywords-110-27-40.json\",\"keywords-111-20-24.json\",\"keywords-112-13-15.json\",\"keywords-113-8-9.json\",\"keywords-114-34-58.json\",\"keywords-115-9-11.json\",\"keywords-116-19-26.json\",\"keywords-117-19-23.json\",\"keywords-118-62-90.json\",\"keywords-119-10-16.json\",\"keywords-120-3-2.json\",\"keywords-121-11-15.json\",\"keywords-122-14-16.json\",\"keywords-123-46-65.json\",\"keywords-124-4-3.json\",\"keywords-125-8-8.json\",\"keywords-126-7-6.json\",\"keywords-127-4-4.json\",\"keywords-128-42-49.json\",\"keywords-129-6-5.json\",\"keywords-130-33-34.json\",\"keywords-131-6-5.json\",\"keywords-132-7-7.json\",\"keywords-133-34-51.json\",\"keywords-134-14-14.json\",\"keywords-135-7-8.json\",\"keywords-136-30-33.json\",\"keywords-137-2-1.json\",\"keywords-138-3-3.json\",\"keywords-139-48-83.json\",\"keywords-140-4-3.json\",\"keywords-141-4-3.json\",\"keywords-142-4-3.json\",\"keywords-143-4-3.json\",\"keywords-144-14-15.json\",\"keywords-145-17-22.json\",\"keywords-146-7-6.json\",\"keywords-147-5-5.json\",\"keywords-148-21-20.json\",\"keywords-149-8-11.json\",\"keywords-150-20-28.json\",\"keywords-151-28-30.json\",\"keywords-152-21-22.json\",\"keywords-153-11-13.json\",\"keywords-154-7-6.json\",\"keywords-155-5-5.json\",\"keywords-156-6-7.json\",\"keywords-157-15-20.json\",\"keywords-158-9-10.json\",\"keywords-159-19-19.json\",\"keywords-160-29-31.json\",\"keywords-161-11-12.json\",\"keywords-162-10-10.json\",\"keywords-163-2-1.json\",\"keywords-164-9-10.json\",\"keywords-165-2-1.json\",\"keywords-166-17-19.json\",\"keywords-167-6-6.json\",\"keywords-168-3-2.json\",\"keywords-169-3-2.json\",\"keywords-170-2-1.json\",\"keywords-171-15-25.json\",\"keywords-172-8-10.json\",\"keywords-173-22-27.json\",\"keywords-174-6-5.json\",\"keywords-175-3-2.json\",\"keywords-176-84-121.json\",\"keywords-177-8-10.json\",\"keywords-178-12-15.json\",\"keywords-179-2-1.json\",\"keywords-180-9-10.json\",\"keywords-181-7-8.json\",\"keywords-182-7-6.json\",\"keywords-183-22-26.json\",\"keywords-184-9-10.json\",\"keywords-185-11-10.json\",\"keywords-186-12-15.json\",\"keywords-187-4-5.json\",\"keywords-188-2-1.json\",\"keywords-189-5-6.json\",\"keywords-190-3-2.json\",\"keywords-191-4-3.json\",\"keywords-192-2-1.json\",\"keywords-193-14-14.json\",\"keywords-194-8-8.json\",\"keywords-195-3-2.json\",\"keywords-196-2-1.json\",\"keywords-197-25-31.json\",\"keywords-198-28-29.json\",\"keywords-199-22-23.json\",\"keywords-200-22-23.json\",\"keywords-201-9-10.json\",\"keywords-202-6-6.json\",\"keywords-203-5-5.json\",\"keywords-204-4-4.json\",\"keywords-205-4-4.json\"]\n\n    // var  html=\"<div class='fg' style='background-color:pink;color:red'>我是被动态创建的</div>\" \n    // $(\".fg\").append(html); \n    $.each(files,function(index, el) {\n        var html = \"<div id=\\\"charts_\"+ index +\"\\\" style=\\\"width:1900px; margin-left:5px; height:900px;\\\"></div>\";\n        $(\"#main\").append(html);\n        var id = \"charts_\" + index;\n        var myChart = echarts.init(document.getElementById(id));\n        myChart.showLoading();\n\n        var filename = 'http://118.31.23.47/public/jsonfile/' + el;\n\n        $.getJSON(filename, function (json) {\n        myChart.hideLoading();\n        myChart.setOption(option = {\n            title: {\n                text: el\n            },\n            animationDurationUpdate: 1500,\n            animationEasingUpdate: 'quinticInOut',\n            series : [\n                {\n                    type: 'graph',\n                    layout: 'force',\n                    force:{\n                        repulsion:150\n                    },\n                    // progressiveThreshold: 700,\n                    label: {\n                        show:true\n                    },\n                    data: json.nodes.map(function (node) {\n                        return {\n                            id: node.id,\n                            name: node.label,\n                            symbolSize: node.size,\n                            itemStyle: {\n                                normal: {\n                                    color: node.color\n                                }\n                            }\n                        };\n                    }),\n\n                    edges: json.edges.map(function (edge) {\n                        return {\n                            source: edge.sourceID,\n                            target: edge.targetID\n                        };\n                    }),\n\n                    roam: true,\n                    focusNodeAdjacency: true,\n                    lineStyle: {\n                        normal: {\n                            width: 0.5,\n                            curveness: 0.3,\n                            opacity: 0.7\n                        }\n                    }\n                }\n            ]\n        }, true);\n\n    \n    });\n\n\t\n});\n</script>\n</body>\n</html>"
    //    result.foreach(value => {
//      headWriter.println(value)
//      headWriter.flush()
//    })
//    headWriter.close()
//    source.close;//记得要关闭source
  }
}
